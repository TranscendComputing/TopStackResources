<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	<!-- ============================== -->
	<!-- hibernate configurations -->
	<bean id="msiDS" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/msi" />
		<property name="username" value="msi" />
		<property name="password" value="msiIsCool" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="msiDS" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"></property>
		<property name="hibernateProperties">
			<value>hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.current_session_context_class=thread
				hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
				hibernate.show_sql=false
				hibernate.hbm2ddl.auto=update
			</value>
		</property>
	</bean>
	<!--
		enable the configuration of transactional behavior based on
		annotations
	-->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- a PlatformTransactionManager is still required -->
	<!--
		bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="msiDS" /> </bean
	-->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<bean id="sleepTime" class="java.lang.Long">
		<constructor-arg value="10000"></constructor-arg>
	</bean>

	<!-- parameters for template engine -->
	<bean id="templateHelper" class="com.msi.tough.core.TemplateHelper">
		<property name="workDir" value="/home/raj/tmp/ftl"></property>
		<property name="logDir" value="/home/raj/tmp/ftl"></property>
		<property name="templateDir"
			value="/home/raj/MsiWorkspace/ToughResources/resources/ftl"></property>

		<!-- mapping of templates to use -->
		<property name="operations">
			<map>
				<!-- ftl to create a new instance -->
				<entry key="createInstance" value="createInstance.ftl"></entry>
				<entry key="deleteInstance" value="deleteInstance.ftl"></entry>
			</map>
		</property>
	</bean>

	<!--  configuation map used by many euca command templates -->
	<util:map id="configMap">
		<!-- common parameters to for Eucalyptus -->
		<entry key="EUCA_SERVER" value="http://192.168.1.4:8773"></entry>
		<entry key="EUCA_KEY_DIR" value="/home/raj/Downloads/euca2-rarora-x509"></entry>
		<entry key="EC2_ACCESS_KEY" value="DwIctxUqVDJ7w7KAFuv5KaFZqglFzpA49XL7pg"></entry>
		<entry key="EC2_SECRET_KEY" value="HgO7hH6uzXuVZAo8bf8weV196sdSVFGhEP7XyA"></entry>
		<entry key="S3_URL" value="http://192.168.1.4:8773/services/Walrus"></entry>
		<entry key="EC2_URL" value="http://192.168.1.4:8773/services/Eucalyptus"></entry>
		<entry key="EC2_PRIVATE_KEY"
			value="/home/raj/Downloads/euca2-rarora-x509/euca2-rarora-233baf3e-pk.pem"></entry>
		<entry key="EC2_CERT"
			value="/home/raj/Downloads/euca2-rarora-x509/euca2-rarora-233baf3e-cert.pem"></entry>
		<entry key="EC2_JVM_ARGS"
			value="-Djavax.net.ssl.trustStore=/home/raj/Downloads/euca2-rarora-x509/jssecacerts"></entry>
		<entry key="EUCALYPTUS_CERT"
			value="/home/raj/Downloads/euca2-rarora-x509/cloud-cert.pem"></entry>
		<entry key="EC2_USER_ID" value="85279925225598981636460975684104946015"></entry>

		<!-- key to connect to a new instance -->
		<entry key="instSshKey" value="/home/raj/MsiWorkspace/rarora.pem"></entry>

		<!-- Load balancer bin upload name and location on server  -->
		<entry key="binUploadPath" value="/home/raj/Downloads/repository/haproxy"></entry>
		<!-- Load balancer name and location on LB instance -->
		<entry key="lbBin" value="/root/haproxy"></entry>
		<entry key="lbConfigDir" value="/root"></entry>
		<entry key="tmpDir" value="/home/raj/tmp/ftl"></entry>
		<entry key="useIpforInstances" value="no"></entry>
	</util:map>

	<!-- implementation bean to register instances with a load balancer -->
	<bean id="createInstance" class="com.msi.tough.instance.CreateInstanceCLI"
		scope="prototype">
		<property name="config" ref="configMap">
		</property>
	</bean>

	<!-- implementation bean to delete running load balancer -->
	<bean id="deleteInstance" class="com.msi.tough.instance.DeleteInstanceCLI"
		scope="prototype">
		<property name="config" ref="configMap">
		</property>
	</bean>

	<bean id="registerInstanceWithLoadBalancer"
		class="com.msi.tough.autoscale.engine.RegisterInstanceWithLoadBalancerCLI">
		<property name="cliOptions">
			<list>
				<value>-U</value>
				<value>http://localhost:8080/axis2/services/ElasticLoadBalancing</value>
				<value>--debug</value>
			</list>
		</property>
	</bean>

	<bean id="deregisterInstanceWithLoadBalancer"
		class="com.msi.tough.autoscale.engine.DeregisterInstanceWithLoadBalancerCLI">
		<property name="threadSleep" value="10000"></property>
		<property name="cliOptions">
			<list>
				<value>-U</value>
				<value>http://localhost:8080/axis2/services/ElasticLoadBalancing</value>
				<value>--debug</value>
			</list>
		</property>
	</bean>

	<bean id="getMetrics" class="com.msi.tough.autoscale.engine.GetMetricsCLI">
		<property name="cliOptions">
			<list>
				<value>-U</value>
				<value>http://192.168.2.101:8080/axis2/services/CloudWatch</value>
			</list>
		</property>
	</bean>

	<!-- Common Configuration setup -->
	<util:map id="configuration">
	</util:map>
</beans>
